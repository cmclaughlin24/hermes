name: Build IAM Service

on:
  push:
    branches:
      - 'main'
    paths-ignore:
      - 'apps/distribution/*'
      - 'apps/notification/*'
  workflow_dispatch:

permissions:
    id-token: write
    contents: read

env:
  app: iam
  aks-namespace: hermes
  chart: ${{ github.workspace }}/kubernetes/helm/iam

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_PASSWORD }}
  #     - name: Set-up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #     - name: NPM Package Version
  #       id: npm-package
  #       uses: ./.github/actions/npm-package-version
  #       with:
  #         filePath: ${{ github.workspace }}/package.json
  #     - name: Build and Push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         file: ./docker/Dockerfile.prod
  #         push: true
  #         platforms: linux/arm64,linux/amd64
  #         tags: |
  #           ${{ secrets.DOCKERHUB_USERNAME }}/iam:latest
  #           ${{ secrets.DOCKERHUB_USERNAME }}/iam:${{ steps.npm-package.outputs.version }}
  #         build-args: |
  #           APPLICATION=iam
  #           DEFAULT_PORT=3002
    deploy:
      # needs: build
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Login to Azure
          uses: azure/login@v1
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        - name: Set AKS Context
          uses: azure/aks-set-context@v3
          with:
            resource-group: cmclaughlin24-dev
            cluster-name: cmclaughlin24-dev
        - name: Helm Deploy
          run: |
            helm upgrade --reuse-values -n ${{ env.aks-namespace }} iam ${{ env.chart }} --dry-run
